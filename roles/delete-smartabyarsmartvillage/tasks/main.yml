---
- name: "Remove zookeeper-nodeport NodePort service on OpenShift"
  k8s:
    state: absent
    api_version: v1
    kind: Service
    name: "zookeeper-nodeport"
    namespace: "{{ ansible_operator_meta.namespace }}"
- name: "Remove fiware-broker-mqtt-nodeport NodePort service on OpenShift"
  k8s:
    state: absent
    api_version: v1
    kind: Service
    name: "fiware-broker-mqtt-nodeport"
    namespace: "{{ ansible_operator_meta.namespace }}"

# Remove Red Hat SSO
- name: "Remove keycloak-db-secret on OpenShift"
  k8s:
    state: absent
    kind: Secret
    api_version: v1
    name: keycloak-db-secret
    namespace: "{{ ansible_operator_meta.namespace }}"
  ignore_errors: true
- name: "Remove {{ site_name }} Keycloak realm on OpenShift"
  k8s:
    state: absent
    api_version: keycloak.org/v1alpha1
    kind: KeycloakRealm
    name: "{{ site_name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
  ignore_errors: true
- name: "Remove {{ site_name }} Keycloak client on OpenShift"
  k8s:
    state: absent
    api_version: keycloak.org/v1alpha1
    kind: KeycloakClient
    name: "{{ site_name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
  ignore_errors: true
- name: "Remove {{ site_name }} Keycloak cluster on OpenShift"
  k8s:
    state: absent
    api_version: keycloak.org/v1alpha1
    kind: Keycloak
    namespace: "{{ ansible_operator_meta.namespace }}"
    name: "{{ site_name }}"
  ignore_errors: true

# Remove Kafka

# Install Zookeeper
- name: "Remove Zookeeper persistent volume claim on OpenShift"
  k8s:
    state: absent
    kind: PersistentVolumeClaim
    api_version: v1
    name: zookeeper
    namespace: "{{ ansible_operator_meta.namespace }}"
- name: "Remove Zookeeper config map on OpenShift"
  k8s:
    state: absent
    kind: ConfigMap
    api_version: v1
    name: zookeeper
    namespace: "{{ ansible_operator_meta.namespace }}"
- name: "Remove Zookeeper deployment on OpenShift"
  k8s:
    state: absent
    kind: Deployment
    api_version: apps/v1
    name: zookeeper
    namespace: "{{ ansible_operator_meta.namespace }}"
- name: "Remove Zookeeper service on OpenShift"
  k8s:
    state: absent
    kind: Service
    api_version: v1
    name: zookeeper
    namespace: "{{ ansible_operator_meta.namespace }}"

# Remove site
- name: "Remove {{ site_name }}-web service on OpenShift"
  k8s:
    state: absent
    api_version: v1
    kind: Service
    name: "smartabyar-smartvillage-web"
    namespace: "{{ ansible_operator_meta.namespace }}"
  ignore_errors: true
- name: "Remove {{ site_name }}-web route on OpenShift"
  k8s:
    state: absent
    api_version: route.openshift.io/v1
    kind: Route
    name: "{{ site_name }}-web"
    namespace: "{{ ansible_operator_meta.namespace }}"
  ignore_errors: true
- name: "Remove orionld-smartvillage-sync service on OpenShift"
  k8s:
    state: absent
    api_version: v1
    kind: Service
    name: "orionld-smartvillage-sync"
    namespace: "{{ ansible_operator_meta.namespace }}"

#- name: "Remove {{ site_name }} secret on OpenShift"
#  k8s:
#    state: absent
#    namespace: "{{ ansible_operator_meta.namespace }}"
- name: "Remove {{ site_name }} deployment config on OpenShift"
  k8s:
    state: absent
    api_version: apps/v1
    kind: Deployment
    name: "{{ site_name }}-web"
    namespace: "{{ ansible_operator_meta.namespace }}"
  ignore_errors: true
- name: "Remove {{ site_name }}-worker deployment on OpenShift"
  k8s:
    state: absent
    api_version: apps/v1
    kind: Deployment
    name: "{{ site_name }}-worker"
    namespace: "{{ ansible_operator_meta.namespace }}"
- name: "Remove {{ site_name }}-sumo deployment on OpenShift"
  k8s:
    state: absent
    api_version: apps/v1
    kind: Deployment
    name: "{{ site_name }}-sumo"
    namespace: "{{ ansible_operator_meta.namespace }}"
- name: "Remove {{ site_name }}-orionld-sync deployment on OpenShift"
  k8s:
    state: absent
    api_version: apps/v1
    kind: Deployment
    name: "orionld-smartvillage-sync"
    namespace: "{{ ansible_operator_meta.namespace }}"
#- name: "Remove {{ site_name }} worker persistent volume claims on OpenShift"
#  k8s:
#    state: absent
#    namespace: "{{ ansible_operator_meta.namespace }}"
#  with_sequence: start=1 end=WORKER_REPLICAS
