---
- debug:
    msg: "{{ lookup('template', 'device.yml') | from_yaml }}"
- name: "Provision the {{ values.device.id }} device"
  connection: local
  uri:
    timeout: 90
    url: "{{ values.iotagent.base_url }}/iot/devices"
    method: POST
    headers:
      Content-Type: "application/json"
      Fiware-Service: "{{ values.ngsi_ld.service | lower }}"
      Fiware-ServicePath: "{{ values.ngsi_ld.service_path }}"
      NGSILD-Tenant: "{{ values.ngsi_ld.service }}"
      NGSILD-Path: "{{ values.ngsi_ld.service_path }}"
      Cache-Control: no-cache
    body_format: json
    body:
      devices:
        - "{{ lookup('template', 'device.yml') | from_yaml }}"
    return_content: true
    validate_certs: false
    status_code: 
      - 200
      - 201
  register: CREATE_DEVICE
  ignore_errors: true
- set_fact:
    CREATE_DEVICE_FAILED: CREATE_DEVICE.failed or (CREATE_DEVICE.json.msg is defined and CREATE_DEVICE.json.msg == 'ENTITY_GENERIC_ERROR')
- debug:
    msg: "{{ lookup('template', 'device.yml') | from_yaml }}"
- name: "Update the {{ values.device.id }} device"
  connection: local
  uri:
    timeout: 90
    url: "{{ values.iotagent.base_url }}/iot/devices/{{ values.device.id | urlencode }}"
    method: PUT
    headers:
      Content-Type: "application/json"
      Fiware-Service: "{{ values.ngsi_ld.service | lower }}"
      Fiware-ServicePath: "{{ values.ngsi_ld.service_path }}"
      NGSILD-Tenant: "{{ values.ngsi_ld.service }}"
      NGSILD-Path: "{{ values.ngsi_ld.service_path }}"
      Cache-Control: no-cache
    body_format: json
    body: "{{ lookup('template', 'device.yml') | from_yaml | ansible.utils.remove_keys(target=['device_id', 'entity_name', 'entity_type', 'transport']) }}"
    return_content: true
    validate_certs: false
    status_code: 
      - 204
      - 200
  register: UPDATE_DEVICE
  when: CREATE_DEVICE_FAILED

- name: Publish message on MQTT topic to device /{{ values.service_group.apikey }}/{{ values.device.id }}/attrs
  community.general.mqtt:
    server: "{{ values.device.mqtt_host }}"
    port: "{{ values.device.mqtt_port }}"
    topic: "/{{ values.service_group.apikey }}/{{ values.device.id }}/attrs"
    payload: "{{ lookup('template', 'device_values.yml') | from_yaml | ansible.utils.remove_keys(target=['id', 'type']) | to_json }}"
    qos: 0
- debug:
    var: "{{ lookup('template', 'device_values.yml') | from_yaml | ansible.utils.remove_keys(target=['id', 'type']) | to_json }}"
- name: "Query the context broker"
  connection: local
  uri:
    timeout: 90
    url: "{{ values.context_broker.base_url }}/ngsi-ld/v1/entities/{{ ENTITY_NAME | urlencode }}"
    method: GET
    headers:
      Fiware-Service: "{{ values.ngsi_ld.service }}"
      Fiware-ServicePath: "{{ values.ngsi_ld.service_path }}"
      NGSILD-Tenant: "{{ values.ngsi_ld.service }}"
      NGSILD-Path: "{{ values.ngsi_ld.service_path }}"
      Content-Type: "application/json"
      Accept: "*/*"
    return_content: true
    validate_certs: false
    status_code: 
      - 200
  register: CB_ENTITY_AFTER
- debug:
    var: CB_ENTITY_AFTER
