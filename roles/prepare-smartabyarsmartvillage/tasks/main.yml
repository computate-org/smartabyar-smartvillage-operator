---

- name: "Query {{ ENTITY_TYPE }}"
  set_fact:
    crd: "{{ query('kubernetes.core.k8s', kind=ENTITY_TYPE, resource_name=ansible_operator_meta.name, namespace=ansible_operator_meta.namespace)[0].spec }}"
  ignore_errors: true
- name: "Verify {{ ENTITY_TYPE }} exists"
  fail:
    msg: |-
      You need to deploy a {{ ENTITY_TYPE }} to OpenShift before running this playbook. See here for an example: https://github.com/computate-org/smartvillage-operator/blob/main/config/samples/smartvillage_v1_smartabyarsmartvillage.yaml
  when: crd is not defined

- name: "Set {{ ENTITY_TYPE }} facts"
  set_fact:
    zookeeper: "{{ crd.zookeeper }}"
    solr: "{{ crd.solr }}"
    sso: "{{ crd.sso }}"
    postgres: "{{ crd.postgres }}"
    fiware: "{{ crd.fiware }}"
    kafka: "{{ crd.kafka }}"
    mqtt: "{{ crd.mqtt }}"
    site: "{{ crd.site }}"
    auth: "{{ crd.auth }}"
    email: "{{ crd.email }}"
    import_data: "{{ crd.import_data }}"
    auth_role: "{{ crd.auth_role }}"
    sumo: "{{ crd.sumo }}"
    yggio: "{{ crd.yggio }}"

- name: "Query postgres pod"
  set_fact:
    postgres_pod_name: "{{ query('kubernetes.core.k8s', kind='Pod', label_selector=('postgres-operator.crunchydata.com/cluster=postgres,postgres-operator.crunchydata.com/data=postgres,postgres-operator.crunchydata.com/instance-set=smartvillage,postgres-operator.crunchydata.com/patroni=postgres-ha,postgres-operator.crunchydata.com/role=master' | string), namespace=ansible_operator_meta.namespace)[0].metadata.name }}"
- name: Run create database scripts on PostgreSQL
  kubernetes.core.k8s_exec:
    pod: "{{ postgres_pod_name }}"
    command: >-
      bash -c 'curl https://raw.githubusercontent.com/computate-org/smartabyar-smartvillage/main/src/main/resources/sql/db-create.sql | psql -U smartvillage smartvillage'
    namespace: "{{ ansible_operator_meta.namespace }}"

- name: Create Solr collection
  kubernetes.core.k8s_exec:
    pod: default-solrcloud-0
    command: >-
      /opt/solr/bin/solr create_collection -c {{ solr.collection }} -n computate
    namespace: "{{ ansible_operator_meta.namespace }}"
    container: solrcloud-node
  register: create_solr_collection
  ignore_errors: True
- name: Test create_collection success
  fail:
    msg: "{{ create_solr_collection }}"
  when: create_solr_collection.failed and create_solr_collection is not search("already exists")
