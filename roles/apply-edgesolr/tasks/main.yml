---
# tasks file for EdgeSolr

- block:
    - name: "{{ 'Install' if values.enable_dev_nodeports else 'Skip' }} solr-nodeport NodePort service on OpenShift"
      k8s:
        state: "{{ 'present' if values.enable_dev_nodeports else 'absent' }}"
        api_version: v1
        kind: Service
        name: "solr-nodeport"
        namespace: "{{ ansible_operator_meta.namespace }}"
        definition: "{{ lookup('template', 'service-solr-nodeport.yaml') }}"
  when: values.enable_dev_nodeports

# Install Solr

- name: Add Zookeeper chart repo
  kubernetes.core.helm_repository:
    name: pravega
    repo_url: https://charts.pravega.io
  changed_when: false
- name: Add Solr chart repo
  kubernetes.core.helm_repository:
    name: solr
    repo_url: https://solr.apache.org/charts
  changed_when: false
- name: Install Zookeeper helm chart
  kubernetes.core.helm:
    name: zookeeper-operator
    chart_ref: pravega/zookeeper-operator
    chart_version: 0.2.15
    history_max: 1
    force: true
    disable_hook: true
    set_values:
      - value: disableFinalizer=true
      - value: hooks.delete=false
      - value: hooks.backoffLimit=1
      - value: crd.create=false
      - value: rbac.create=false
      - value: watchNamespace={{ ansible_operator_meta.namespace }}
    release_namespace: "{{ ansible_operator_meta.namespace }}"
    release_state: present
    skip_crds: true
  changed_when: false
  register: helm_zookeeper
  ignore_errors: true
- k8s:
    state: absent
    api_version: v1
    kind: Secret
    label_selectors:
      - 'owner=helm'
    namespace: "{{ ansible_operator_meta.namespace }}"
  when: helm_zookeeper.failed
- fail:
    msg: "Installing zookeeper helm chart failed: {{ helm_zookeeper }}"
  when: helm_zookeeper.failed
- name: Install Solr helm chart
  kubernetes.core.helm:
    name: solr-operator
    chart_ref: solr/solr-operator
    chart_version: 0.7.0
    history_max: 1
    force: true
    disable_hook: true
    set_values:
      - value: leaderElection.enable=false
      - value: rbac.create=false
      - value: serviceAccount.create=true
      - value: serviceAccount.name=solr
      - value: podOptions.serviceAccountName=solr
      - value: watchNamespaces={{ ansible_operator_meta.namespace }}
      - value: zookeeper-operator.install=false
      - value: zookeeper-operator.use=true
    release_namespace: "{{ ansible_operator_meta.namespace }}"
    release_state: present
    skip_crds: true
  changed_when: false
  register: helm_solr
  ignore_errors: true
- k8s:
    state: absent
    api_version: v1
    kind: Secret
    label_selectors:
      - 'owner=helm'
    namespace: "{{ ansible_operator_meta.namespace }}"
  when: helm_solr.failed
- fail:
    msg: "Installing solr helm chart failed: {{ helm_solr }}"
  when: helm_solr.failed

- name: "Install Solr Cloud on OpenShift"
  k8s:
    state: "present"
    api_version: solr.apache.org/v1beta1
    kind: SolrCloud
    name: "{{ values.solr.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'solrcloud.yaml') }}"
- name: "Install Solr route on OpenShift"
  k8s:
    state: "present"
    kind: Route
    api_version: route.openshift.io/v1
    name: solr
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'route-solr.yaml') }}"
  ignore_errors: true
- name: "Remove readinessGates from solrcloud"
  kubernetes.core.k8s_json_patch:
    kind: StatefulSet
    api_version: apps/v1
    name: "{{ values.solr.name }}-solrcloud"
    namespace: "{{ ansible_operator_meta.namespace }}"
    patch:
      - op: remove
        path: /spec/template/spec/readinessGates
  ignore_errors: true
  register: remove_readinessGates
- name: Delete solr pods with readinessGates
  k8s:
    state: absent
    api_version: v1
    kind: Pod
    label_selectors:
      - "solr-cloud={{ values.solr.name }}"
      - "statefulset.kubernetes.io/pod-name={{ values.solr.name }}-solrcloud-0"
      - "technology=solr-cloud"
    namespace: "{{ ansible_operator_meta.namespace }}"
  when: not remove_readinessGates.failed

- name: "Verify Solr"
  wait_for:
    host: "{{ values.solr.name + '-solrcloud-common.' + ansible_operator_meta.namespace + '.svc' }}"
    port: "{{ values.solr.port }}"
    state: started
    delay: 0
    timeout: 5
  register: verify_solr
  ignore_errors: yes
  when: verify_connections
- name: "Verify Solr is running"
  fail:
    msg: |-
      The Solr service was unavailable. Have you run the prerequisite Ansible Playbook? https://github.com/computate-org/smartvillage-operator/blob/main/prepare-smartabyarsmartvillage.yaml
  when: verify_connections and verify_solr.failed

- name: Upload loop for Solr configsets
  include_role:
    name: solr-configset
  loop: "{{ values.solr.configsets }}"
  when: values.solr.configsets is iterable

- name: Create loop for Solr collections
  include_role:
    name: solr-collection
  loop: "{{ values.solr.collections }}"
  when: values.solr.collections is iterable
