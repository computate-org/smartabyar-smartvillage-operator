---

- name: "{{ 'Install' if values.site.enable_dev_nodeports else 'Skip' }} site-nodeport NodePort service on OpenShift"
  k8s:
    state: "{{ 'present' if values.site.enable_dev_nodeports else 'absent' }}"
    api_version: v1
    kind: Service
    name: "site-nodeport"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'service-site-nodeport.yaml') }}"
  when: values.site.enable_dev_nodeports

# Install site
- name: "Install {{ site_name }}-web service on OpenShift"
  k8s:
    state: "{{ 'present' if values.site.create else 'absent' }}"
    api_version: v1
    kind: Service
    name: "smartabyar-smartvillage-web"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'service-web.yaml') }}"
  when: values.site.create
- name: "Install {{ site_name }}-web route on OpenShift"
  k8s:
    state: "{{ 'present' if values.site.create else 'absent' }}"
    api_version: route.openshift.io/v1
    kind: Route
    name: "{{ site_name }}-web"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'route-web.yaml') }}"
  when: values.site.create
- name: "Install ngsild-smartvillage-sync service on OpenShift"
  k8s:
    state: "{{ 'present' if values.ngsi_ld.sync else 'absent' }}"
    api_version: v1
    kind: Service
    name: "ngsild-smartvillage-sync"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'service-orionld-sync.yaml') }}"
  when: values.ngsi_ld.sync

- name: "Query site host name"
  set_fact:
    site_host_name: "{{ query('kubernetes.core.k8s', kind='Route', api_version='route.openshift.io/v1', resource_name=(site_name + '-web'), namespace=ansible_operator_meta.namespace)[0].spec.host | default(values.site.host_name) }}"

#- name: "Install {{ site_name }} secret on OpenShift"
#  k8s:
#    state: "{{ 'present' if site.create else 'absent' }}"
#    namespace: "{{ ansible_operator_meta.namespace }}"
#    definition: "{{ lookup('template', 'secret.yaml') }}"
- name: "Install {{ site_name }}-web deployment on OpenShift"
  k8s:
    state: "{{ 'present' if values.site.create else 'absent' }}"
    api_version: apps/v1
    kind: Deployment
    name: "{{ site_name }}-web"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'deployment-web.yaml') }}"
  when: values.site.create
- name: "Install {{ site_name }}-worker deployment on OpenShift"
  k8s:
    state: "{{ 'present' if values.site.create else 'absent' }}"
    api_version: apps/v1
    kind: Deployment
    name: "{{ site_name }}-worker"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'deployment-worker.yaml') }}"
  when: values.site.create
- name: "Install {{ site_name }}-sumo deployment on OpenShift"
  k8s:
    state: "{{ 'present' if values.site.create else 'absent' }}"
    api_version: apps/v1
    kind: Deployment
    name: "{{ site_name }}-sumo"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'deployment-sumo.yaml') }}"
  when: values.site.create
- name: "Install {{ site_name }}-orionld-sync deployment on OpenShift"
  k8s:
    state: "{{ 'present' if values.ngsi_ld.sync else 'absent' }}"
    api_version: apps/v1
    kind: Deployment
    name: "ngsild-smartvillage-sync"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'deployment-ngsild-sync.yaml') }}"
  when: values.ngsi_ld.sync
#- name: "Install {{ site_name }} worker persistent volume claims on OpenShift"
#  k8s:
#    state: "{{ 'present' if site.create else 'absent' }}"
#    namespace: "{{ ansible_operator_meta.namespace }}"
#    definition: "{{ lookup('template', 'persistentvolumeclaim.yaml') }}"
#  with_sequence: start=1 end=WORKER_REPLICAS
