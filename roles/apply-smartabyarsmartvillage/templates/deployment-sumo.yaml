spec:
  replicas: {{ values.site.sumo_replicas }}
  selector:
    matchLabels:
      app: "{{ site_name }}-sumo"
      deploymentconfig: "{{ site_name }}-sumo"
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ site_name }}-sumo"
        deploymentconfig: "{{ site_name }}-sumo"
    spec:
      containers:
        - name: smartvillage-traffic-light-controller-sumo
          imagePullPolicy: Always
          image: 'quay.io/computateorg/smartvillage-traffic-light-controller-sumo:computate-api'
          ports:
            - containerPort: 8081
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 8081
              scheme: "HTTP"
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 20
          livenessProbe:
            httpGet:
              path: /
              port: 8081
              scheme: "HTTP"
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 20
          resources:
            limits:
              memory: '{{ values.sumo.resources.limits.memory }}'
              cpu: '{{ values.sumo.resources.limits.cpu }}'
            requests:
              memory: '{{ values.sumo.resources.requests.memory }}'
              cpu: '{{ values.sumo.resources.requests.cpu }}'
          env:

            - name: "KAFKA_BROKERS"
              value: "{{ values.kafka.host }}:{{ values.kafka.port }}"
            - name: "KAFKA_GROUP"
              value: "{{ values.kafka.group }}"
            - name: "KAFKA_SECURITY_PROTOCOL"
              value: "{{ values.kafka.security_protocol }}"
            - name: "KAFKA_SSL_CAFILE"
              value: "{{ values.kafka.ssl_ca_crt_location }}"
            - name: "KAFKA_SSL_CERTFILE"
              value: "{{ values.kafka.ssl_user_crt_location }}"
            - name: "KAFKA_SSL_KEYFILE"
              value: "{{ values.kafka.ssl_user_key_location }}"
            - name: KAFKA_TOPIC_SUMO_RUN
              value: smartvillage-sumo-run
            - name: KAFKA_TOPIC_SUMO_RUN_REPORT
              value: smartvillage-sumo-run-report
            - name: ZOOKEEPER_HOST_NAME
              value: zookeeper
            - name: ZOOKEEPER_PORT
              value: '2181'
          volumeMounts:
            - mountPath: /opt/kafka/keystore
              name: "{{ values.kafka.keystore_secret }}"
              readOnly: true
            - mountPath: /opt/kafka/truststore
              name: "{{ values.kafka.truststore_secret }}"
              readOnly: true
      volumes:
        - name: "{{ values.kafka.keystore_secret }}"
          secret:
            defaultMode: 420
            secretName: "{{ values.kafka.keystore_secret }}"
        - name: "{{ values.kafka.truststore_secret }}"
          secret:
            defaultMode: 420
            secretName: "{{ values.kafka.truststore_secret }}"
