spec:
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    matchLabels:
      app: zookeeper
      deploymentConfig: zookeeper
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: zookeeper
      creationTimestamp: null
      labels:
        app: zookeeper
        application: zookeeper
        deploymentConfig: zookeeper
    spec:
      volumes:
        - name: volume-zookeeper-data
          persistentVolumeClaim:
            claimName: zookeeper
        - name: volume-zookeeper-conf
          configMap:
            name: zookeeper
            defaultMode: 440
      containers:
        - name: zookeeper
          imagePullPolicy: IfNotPresent
          image: 'docker.io/zookeeper:3.6.1'
          resources:
            limits:
              memory: '{{ values.zookeeper.resources.limits.memory }}'
              cpu: '{{ values.zookeeper.resources.limits.cpu }}'
            requests:
              memory: '{{ values.zookeeper.resources.requests.memory }}'
              cpu: '{{ values.zookeeper.resources.requests.cpu }}'
          readinessProbe:
            exec:
              command:
                - /conf/zookeeper_healthcheck.sh
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          livenessProbe:
            exec:
              command:
                - /conf/zookeeper_healthcheck.sh
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
            - name: client-port
              containerPort: 2181
              protocol: TCP
          volumeMounts:
            - name: volume-zookeeper-data
              mountPath: /data
            - name: volume-zookeeper-conf
              mountPath: /conf
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
