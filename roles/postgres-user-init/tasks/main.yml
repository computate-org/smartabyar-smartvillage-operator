---

- name: "Query postgres pod"
  set_fact:
    postgres_pod_name: "{{ query('kubernetes.core.k8s', kind='Pod', label_selector=(('postgres-operator.crunchydata.com/instance-set=' + user.instance + ',postgres-operator.crunchydata.com/role=master') if values.postgres.crunchy else ('statefulset.kubernetes.io/pod-name=postgres-' + values.postgres.instances[0].name + '-0') | string), namespace=ansible_operator_meta.namespace)[0].metadata.name }}"
  when: not values.postgres.crunchy and user.name is defined

- name: "Initialize database user {{ user.name }} on pod {{ postgres_pod_name }}: "
  kubernetes.core.k8s_exec:
    pod: "{{ postgres_pod_name }}"
    command: >-
      psql -U postgres postgres -c "create user {{ user.name }} password '{{ query('kubernetes.core.k8s', kind='Secret', resource_name=('postgres-pguser-' + user.name), namespace=ansible_operator_meta.namespace)[0].data['password'] | b64decode }}' {{ user.options | default('') }};"
    namespace: "{{ ansible_operator_meta.namespace }}"
  when: not values.postgres.crunchy and user.name is defined
  ignore_errors: true

- name: Create user databases
  include_role:
    name: postgres-db-init
  loop_control:
    loop_var: db
  loop: "{{ user.databases | default([]) }}"
  