---
# tasks file for EdgeRabbitMQ

- block:
    - name: "{{ 'Install' if values.enable_dev_nodeports else 'Skip' }} mqtt-nodeport NodePort service on OpenShift"
      k8s:
        state: "{{ 'present' if values.enable_dev_nodeports else 'absent' }}"
        api_version: v1
        kind: Service
        name: "mqtt-nodeport"
        namespace: "{{ ansible_operator_meta.namespace }}"
        definition: "{{ lookup('template', 'service-mqtt-nodeport.yaml') }}"
  when: values.enable_dev_nodeports

- name: Add rabbitmq chart repo
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: https://charts.bitnami.com/bitnami
  changed_when: false
- name: Install rabbitmq helm chart
  kubernetes.core.helm:
    name: "{{ values.rabbitmq.name }}"
    chart_ref: bitnami/rabbitmq
    history_max: 1
    force: true
    disable_hook: true
    set_values:
      - value: "replicaCount={{ values.rabbitmq.replicas }}"
      - value: "resources.limits.memory={{ values.rabbitmq.resources.limits.memory }}"
      - value: "resources.limits.cpu={{ values.rabbitmq.resources.limits.cpu }}"
      - value: "resources.requests.cpu={{ values.rabbitmq.resources.requests.cpu }}"
      - value: "resources.requests.memory={{ values.rabbitmq.resources.requests.memory }}"
      - value: "extraPlugins=rabbitmq_mqtt"
      - value: "featureFlags=all"
      - value: "image.registry=docker.io"
      - value: "image.repository=rabbitmq"
      - value: "image.tag=3.13.0-beta.6-management-alpine"
      - value: 'service.extraPorts=[{"name":"mqtt","port":1883,"targetPort":1883}]'
        value_type: json
      - value: podSecurityContext.enabled=false
      - value: containerSecurityContext.enabled=false
    release_namespace: "{{ ansible_operator_meta.namespace }}"
    release_state: present
    skip_crds: true
  changed_when: false
  register: rabbitmq
  ignore_errors: true
- k8s:
    state: absent
    api_version: v1
    kind: Secret
    label_selectors:
      - 'owner=helm'
    namespace: "{{ ansible_operator_meta.namespace }}"
  when: rabbitmq.failed
- fail:
    msg: "Installing rabbitmq helm chart failed: {{ rabbitmq }}"
  when: rabbitmq.failed
