---
MODEL_NAME: TrafficFlowObserved
SUBMODULE_SHORT_NAME: Transportation
DOMAIN_NAME: SmartCities
name: smartvillage
description: |
  A device for watching vehicles in a lane of traffic on a road. 
schema:
  managementState:
    type: string
    default: Managed
    enum:
      - Managed
      - Unmanaged
  iotagent:
    type: object
    properties:
      name:
        type: string
        default: iotagent-json
      namespace:
        type: string
        default: iotagent
      service_name:
        type: string
        default: iotagent-json
      base_url:
        type: string
  context_broker:
    type: object
    properties:
      name:
        type: string
        default: scorpiobroker
      namespace:
        type: string
        default: scorpiobroker
      service_name:
        type: string
        default: scorpiobroker
      base_url:
        type: string
  ngsi_ld:
    type: object
    properties:
      service:
        type: string
        default: trafficflowobserveds
      service_path:
        type: string
        default: /Sweden/Veberod/CityCenter
      context:
        type: string
        default: https://raw.githubusercontent.com/computate-org/smartabyar-smartvillage-static/main/fiware/context.jsonld
  service_group:
    type: object
    properties:
      resource:
        type: string
        default: /iot/json
      apikey:
        type: string
        default: TrafficFlowObserved
  message_broker:
    type: object
    properties:
      namespace:
        type: string
        description: The namespace of the message broker
      transport:
        type: string
        default: MQTT
        enum:
          - MQTT
          - AMQP
      host:
        type: string
        default: default-mqtt-0-svc.amqbroker.svc
      user:
        type: string
      secret:
        type: object
        properties:
          name:
            type: string
          key:
            type: string
      port:
        type: number
        default: 1883
  device:
    type: object
    properties:
      id:
        type: string
      subscription_url:
        type: string
        default: "http://orionld-smartvillage-sync:8080"
  smartabyar_smartvillage:
    type: object
    properties:
      enabled:
        type: boolean
        default: true
      auth_secret_name:
        type: string
        default: keycloak-client-secret-smartvillage
      auth_token_url:
        type: string
        default: https://keycloak-sso.apps-crc.testing/auth/realms/SMARTVILLAGE/protocol/openid-connect/token
      site_base_url:
        type: string
        default: https://smartvillage-web-smartvillage.apps-crc.testing
      smart_model_api:
        type: string
        default: /api/traffic-flow-observed
  alternate_model:
    type: object
    properties:
      enabled:
        type: boolean
        default: true
      id:
        type: string
        default: trafficflowobserved
      enabled:
        type: string
        default: TrafficFlowObserved
smart_data_model:
  attributes:
    color:
      name: color
      type: string
    entityId:
      name: entityId
      type: string
      description: >+
        A unique ID for this Smart Data Model
    trafficSimulationId:
      name: trafficSimulationId
      type: string
      description: >+
        The Traffic Simulation ID
    laneAreaDetectorId:
      name: laneAreaDetectorId
      type: string
      description: >+
        The unique ID of the lane area detector in SUMO. 
    location:
      name: location
      type: geo:point
    simulationName:
      name: simulationName
      type: string
    sumocfgPath:
      name: sumocfgPath
      type: string
    customTrafficLightId:
      name: customTrafficLightId
      type: string
      description: >+
        The Smart Traffic Light ID
    address:
      name: address
      type: object
      description: >+
        The mailing address
      x-ngsi:
        model: https://schema.org/address
    alternateName:
      name: alternateName
      type: string
      description: >+
        An alternative name for this item
    areaServed:
      name: areaServed
      type: geo:linestring
      description: >+
        The geographic area where a service or offered item is provided.
        Geojson reference to the item. It can be Point, LineString, Polygon,
        MultiPoint, MultiLineString or MultiPolygon. 
      required: true
    averageGapDistance:
      name: averageGapDistance
      type: number
      description: >+
        Average gap distance between consecutive vehicles
      x-ngsi:
        model: https://schema.org/Number
    averageHeadwayTime:
      name: averageHeadwayTime
      type: number
      description: >+
        Average headway time. Headway time is the time ellapsed between two
        consecutive vehicles
      x-ngsi:
        model: https://schema.org/Number
    averageVehicleLength:
      name: averageVehicleLength
      type: number
      description: >+
        Average length of the vehicles transiting during     the observation
        period
      x-ngsi:
        model: https://schema.org/Number
    averageVehicleSpeed:
      name: averageVehicleSpeed
      type: number
      description: >+
        Average speed of the vehicles transiting during the observation period
      x-ngsi:
        model: https://schema.org/Number
    congested:
      name: congested
      type: boolean
      description: >+
        Flags whether there was a traffic congestion during the observation
        period in the referred lane. The absence of this attribute means no
        traffic congestion
      x-ngsi:
        model: https://schema.org/Boolean
    dataProvider:
      name: dataProvider
      type: string
      description: >+
        A sequence of characters identifying the provider of the harmonised
        data entity.
    dateCreated:
      name: dateCreated
      type: string
      description: >+
        Entity creation timestamp. This will usually be allocated by the
        storage platform.
    dateModified:
      name: dateModified
      type: string
      description: >+
        Timestamp of the last modification of the entity. This will usually be
        allocated by the storage platform.
    dateObserved:
      name: dateObserved
      type: string
      description: >+
        The date and time of this observation in ISO8601 UTC format. It can be
        represented by an specific time instant or by an ISO8601 interval. As
        a workaround for the lack of support of Orion Context Broker for
        datetime intervals, it can be used two separate attributes:
        `dateObservedFrom`, `dateObservedTo`.
        [DateTime](https://schema.org/DateTime) or an ISO8601 interval
        represented as [Text](https://schema.org/Text)
    dateObservedFrom:
      name: dateObservedFrom
      type: string
      description: >+
        Observation period start date and time. See `dateObserved`
    dateObservedTo:
      name: dateObservedTo
      type: string
      description: >+
        Observation period end date and time. See `dateObserved`
    description:
      name: description
      type: string
      description: >+
        A description of this item
    intensity:
      name: intensity
      type: number
      description: >+
        Total number of vehicles detected during this observation period
      x-ngsi:
        model: https://schema.org/Number
    laneDirection:
      name: laneDirection
      type: string
      description: >+
        Usual direction of travel in the lane referred by this observation.
        This attribute is useful when the observation is not referencing any
        road segment, allowing to know the direction of travel of the traffic
        flow observed. Enum:forward, backward'. See RoadSegment for a
        description of the semantics of these values.
    laneId:
      name: laneId
      type: number
      description: >+
        Lane identifier. Lane identification is done using the conventions
        defined by RoadSegment entity which are based on
        [OpenStreetMap](http://wiki.openstreetmap.org/wiki/Forward_%26_backward,_left_%26_right).
      x-ngsi:
        model: https://schema.org/Number
    name:
      name: name
      type: string
      description: >+
        The name of this item.
    occupancy:
      name: occupancy
      type: number
      description: >+
        Fraction of the observation time where a vehicle has been occupying
        the observed lane
      x-ngsi:
        model: https://schema.org/Number
    owner:
      name: owner
      type: object
      description: >+
        A List containing a JSON encoded sequence of characters referencing
        the unique Ids of the owner(s)
    refRoadSegment:
      name: refRoadSegment
      type: string
      description: >+
        Concerned road segment on which the observation has been made.
        Reference to an entity of type RoadSegment
    reversedLane:
      name: reversedLane
      type: boolean
      description: >+
        Flags whether traffic in the lane was reversed during the observation
        period. The absence of this attribute means no lane reversion
      x-ngsi:
        model: https://schema.org/Boolean
    seeAlso:
      name: seeAlso
      type: object
      description: >+
        list of uri pointing to additional resources about the item
    source:
      name: source
      type: string
      description: >+
        A sequence of characters giving the original source of the entity data
        as a URL. Recommended to be the fully qualified domain name of the
        source provider, or the URL to the source object.
    vehicleSubType:
      name: vehicleSubType
      type: string
      description: >+
        It allows to specify a sub type of `vehicleType`, eg if the
        `vehicleType` is set to `Lorry` the `vehicleSubType` may be `OGV1` or
        `OGV2` to convey more information about the exact type of vehicle.
    vehicleType:
      name: vehicleType
      type: string
      description: >+
        Type of vehicle from the point of view of its structural
        characteristics. Enum:'agriculturalVehicle, bicycle, bus, minibus,
        car, caravan, tram, tanker, carWithCaravan, carWithTrailer, lorry,
        moped, motorcycle, motorcycleWithSideCar, motorscooter, trailer, van,
        constructionOrMaintenanceVehicle, trolley, binTrolley,
        sweepingMachine, cleaningTrolley'
    customSigma:
      name: customSigma
      type: number
      description: >+
        The driver imperfection as a floating point number [0,1] (0 denotes
        perfect driving). 
      x-ngsi:
        model: https://schema.org/Number
    customAcceleration:
      name: customAcceleration
      type: number
      description: >+
        The acceleration ability of vehicles of this type (in m/s^2). 
      x-ngsi:
        model: https://schema.org/Number
    customDeceleration:
      name: customDeceleration
      type: number
      description: >+
        The deceleration ability of vehicles of this type (in m/s^2). 
      x-ngsi:
        model: https://schema.org/Number
    customMinGreenTime:
      name: customMinGreenTime
      type: number
      description: >+
        Min green time for the traffic light in seconds [1, 50]. 
      x-ngsi:
        model: https://schema.org/Number
    customMaxGreenTime:
      name: customMaxGreenTime
      type: number
      description: >+
        Max green time for the traffic light in seconds [1, 50]. 
      x-ngsi:
        model: https://schema.org/Number
    customAverageVehiclesPerMinute:
      name: customAverageVehiclesPerMinute
      type: number
      description: >+
        Average vehicle/min [1, 30]. 
      x-ngsi:
        model: https://schema.org/Number
    customDemandScalingFactor:
      name: customDemandScalingFactor
      type: number
      description: >+
        Demand scaling factor (multiplies all vehicle demands) [1, 2]. 
      x-ngsi:
        model: https://schema.org/Number
    customQueueLengthThreshold:
      name: customQueueLengthThreshold
      type: number
      description: >+
        Demand scaling factor (multiplies all vehicle demands) [1, 2]. 
      x-ngsi:
        model: https://schema.org/Number
