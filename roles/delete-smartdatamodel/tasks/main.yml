---

- name: "Query the IOT Agent service"
  set_fact:
    iotagent_port: "{{ query('kubernetes.core.k8s', kind='Service', resource_name=values.iotagent.name, namespace=values.iotagent.namespace)[0].spec.ports | community.general.json_query(QUERY) | first }}"
  vars: 
    QUERY: |-
      [?name=='north'].port
  when: values.iotagent.base_url == ''
- name: "Configure iotagent_base_url"
  set_fact:
    iotagent_base_url: "http://{{ query('kubernetes.core.k8s', kind='Route', resource_name=values.iotagent.name, namespace=values.iotagent.namespace)[0].spec.host }}"
  when: values.iotagent.base_url == '' and verify_connections is defined and not verify_connections
- name: "Configure iotagent_base_url"
  set_fact:
    iotagent_base_url: "http://{{ values.iotagent.name }}.{{ values.iotagent.namespace }}.svc:{{ iotagent_port }}"
  when: values.iotagent.base_url == '' and (verify_connections is not defined or verify_connections)
- name: "Configure iotagent base url"
  set_fact:
    iotagent_base_url: "{{ values.iotagent.base_url }}"
  when: values.iotagent.base_url != ''
- name: "Update values.iotagent.base_url"
  set_fact:
    values: "{{ values | combine({'iotagent':{'base_url':iotagent_base_url}}, recursive=true) }}"
  when: values.iotagent.base_url == ''

- name: "Query the Orion-LD Context Broker service"
  set_fact:
    context_broker_port: "{{ query('kubernetes.core.k8s', kind='Service', resource_name=values.context_broker.name, namespace=values.context_broker.namespace)[0].spec.ports | community.general.json_query(QUERY) | first }}"
  vars: 
    QUERY: |-
      [?name=='http'].port
  when: values.context_broker.base_url == ''
- name: "Configure context_broker_base_url"
  set_fact:
    context_broker_base_url: "http://{{ query('kubernetes.core.k8s', kind='Route', resource_name=values.context_broker.name, namespace=values.context_broker.namespace)[0].spec.host }}"
  when: values.context_broker.base_url == '' and verify_connections is defined and not verify_connections
- name: "Configure context_broker_base_url"
  set_fact:
    context_broker_base_url: "http://{{ values.context_broker.name }}.{{ values.context_broker.namespace }}.svc:{{ context_broker_port }}"
  when: values.context_broker.base_url == '' and (verify_connections is not defined or verify_connections)
- name: "Configure context broker base url"
  set_fact:
    context_broker_base_url: "{{ values.context_broker.base_url }}"
  when: values.context_broker.base_url != ''
- name: "Update values.context_broker.base_url"
  set_fact:
    values: "{{ values | combine({'context_broker':{'base_url':context_broker_base_url}}, recursive=true) }}"
  when: values.context_broker.base_url == ''

- name: "Delete the {{ values.service_group.apikey }} service group"
  connection: local
  uri:
    timeout: 90
    url: "{{ values.iotagent.base_url }}/iot/services?apikey={{ values.service_group.apikey | string | urlencode }}&resource={{ values.service_group.resource | string | urlencode }}"
    method: DELETE
    headers:
      Fiware-Service: "{{ values.ngsi_ld.service }}"
      Fiware-ServicePath: "{{ values.ngsi_ld.service_path }}"
      NGSILD-Tenant: "{{ values.ngsi_ld.service }}"
      NGSILD-Path: "{{ values.ngsi_ld.service_path }}"
    validate_certs: false
    status_code: 
      - 200
      - 202
      - 204
  ignore_errors: true

- name: "Delete the {{ values.device.id }} device"
  connection: local
  uri:
    timeout: 90
    url: "{{ values.iotagent.base_url }}/iot/devices/{{ values.device.id | string | urlencode }}"
    method: DELETE
    headers:
      Fiware-Service: "{{ values.ngsi_ld.service | lower }}"
      Fiware-ServicePath: "{{ values.ngsi_ld.service_path }}"
      NGSILD-Tenant: "{{ values.ngsi_ld.service }}"
      NGSILD-Path: "{{ values.ngsi_ld.service_path }}"
    validate_certs: false
    status_code: 
      - 200
      - 202
      - 204
  ignore_errors: true

- name: "Delete the {{ ENTITY_NAME }} subscription"
  connection: local
  uri:
    timeout: 90
    url: "{{ values.context_broker.base_url }}/ngsi-ld/v1/subscriptions/{{ SUBSCRIPTION_NAME | string | urlencode }}"
    method: DELETE
    headers:
      Fiware-Service: "{{ values.ngsi_ld.service | lower }}"
      Fiware-ServicePath: "{{ values.ngsi_ld.service_path }}"
      NGSILD-Tenant: "{{ values.ngsi_ld.service }}"
      NGSILD-PATH: "{{ values.ngsi_ld.service_path }}"
      Accept: "*/*"
    validate_certs: false
    status_code: 
      - 200
      - 202
      - 204
  ignore_errors: true

- name: "Delete the {{ ENTITY_NAME }} entity {{ ENTITY_NAME }}"
  connection: local
  uri:
    timeout: 90
    url: "{{ values.context_broker.base_url }}/ngsi-ld/v1/entities/{{ ENTITY_NAME | string | urlencode }}"
    method: DELETE
    headers:
      Fiware-Service: "{{ values.ngsi_ld.service | lower }}"
      Fiware-ServicePath: "{{ values.ngsi_ld.service_path }}"
      NGSILD-Tenant: "{{ values.ngsi_ld.service }}"
      NGSILD-PATH: "{{ values.ngsi_ld.service_path }}"
      Accept: "*/*"
    validate_certs: false
    status_code: 
      - 200
      - 202
      - 204
  ignore_errors: true
