---
# tasks file for EdgePostgres

- name: "{{ 'Install' if values.postgres.enable_dev_nodeports else 'Skip' }} postgres-nodeport NodePort service on OpenShift"
  k8s:
    state: "{{ 'present' if values.postgres.enable_dev_nodeports else 'absent' }}"
    api_version: v1
    kind: Service
    name: "postgres-nodeport"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'service-postgres-nodeport.yaml') }}"

# Install PostgreSQL
- name: Install {{ ansible_operator_meta.name }} PostgreSQL cluster on OpenShift
  k8s:
    state: "present"
    api_version: postgres-operator.crunchydata.com/v1beta1
    kind: PostgresCluster
    name: postgres
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'postgrescluster.yaml') }}"
  when: values.postgres.crunchy

- name: "Install postgres service account on OpenShift"
  k8s:
    state: present
    kind: ServiceAccount
    api_version: v1
    name: postgres
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'serviceaccount-postgres.yaml') }}"
  when: not values.postgres.crunchy
- name: "Install postgres secret on OpenShift"
  k8s:
    state: present
    kind: Secret
    api_version: v1
    name: "postgres-user-{{ user.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'postgres-user-secret.yaml') }}"
  when: not values.postgres.crunchy
  loop: "{{ values.postgres.users | default([]) }}"
  loop_control:
    loop_var: user
- name: Install {{ ansible_operator_meta.name }} postgres StatefulSet on OpenShift
  k8s:
    state: "present"
    api_version: apps/v1
    kind: StatefulSet
    name: "postgres-{{ instance.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'statefulset-postgres.yaml') }}"
  when: not values.postgres.crunchy
  loop: "{{ values.postgres.instances }}"
  loop_control:
    loop_var: instance
- name: Install {{ ansible_operator_meta.name }} postgres Service on OpenShift
  k8s:
    state: "present"
    api_version: v1
    kind: Service
    name: "postgres-{{ instance.name }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
    definition: "{{ lookup('template', 'service-postgres.yaml') }}"
  when: not values.postgres.crunchy
  loop: "{{ values.postgres.instances }}"
  loop_control:
    loop_var: instance

- name: "Verify PostgreSQL"
  wait_for:
    host: "{{ ansible_operator_meta.name + '-primary.' + ansible_operator_meta.namespace + '.svc' }}"
    port: "5432"
    state: started
    delay: 0
    timeout: 5
  register: verify_postgresql
  ignore_errors: yes
  when: verify_connections and values.postgres.crunchy
- name: "Verify PostgreSQL is running"
  fail:
    msg: |-
      The PostgreSQL service was unavailable. Have you run the prerequisite Ansible Playbook? https://github.com/computate-org/smartvillage-operator/blob/main/prepare-smartabyarsmartvillage.yaml
  when: verify_connections and verify_postgresql.failed

- name: Run SQL configMap scripts on postgres
  include_role:
    name: postgres-sql-script
  loop: "{{ values.postgres.config.files | json_query(_query) | default([]) }}"
  vars:
    _query: |-
      [].configMap.items[]

- name: Run SQL secret scripts on postgres
  include_role:
    name: postgres-sql-script
  loop: "{{ values.postgres.config.files | json_query(_query) | default([]) }}"
  vars:
    _query: |-
      [].secret.items[]
